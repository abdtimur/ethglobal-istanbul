// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CollectionCreated extends ethereum.Event {
  get params(): CollectionCreated__Params {
    return new CollectionCreated__Params(this);
  }
}

export class CollectionCreated__Params {
  _event: CollectionCreated;

  constructor(event: CollectionCreated) {
    this._event = event;
  }

  get mentor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MindShare extends ethereum.SmartContract {
  static bind(address: Address): MindShare {
    return new MindShare("MindShare", address);
  }

  attest(schema: Bytes, isMentor: boolean, recipient: Address): Bytes {
    let result = super.call(
      "attest",
      "attest(bytes32,bool,address):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(schema),
        ethereum.Value.fromBoolean(isMentor),
        ethereum.Value.fromAddress(recipient)
      ]
    );

    return result[0].toBytes();
  }

  try_attest(
    schema: Bytes,
    isMentor: boolean,
    recipient: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "attest",
      "attest(bytes32,bool,address):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(schema),
        ethereum.Value.fromBoolean(isMentor),
        ethereum.Value.fromAddress(recipient)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getMentorCollection(mentor: Address): Address {
    let result = super.call(
      "getMentorCollection",
      "getMentorCollection(address):(address)",
      [ethereum.Value.fromAddress(mentor)]
    );

    return result[0].toAddress();
  }

  try_getMentorCollection(mentor: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getMentorCollection",
      "getMentorCollection(address):(address)",
      [ethereum.Value.fromAddress(mentor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  schemaUID(): Bytes {
    let result = super.call("schemaUID", "schemaUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_schemaUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("schemaUID", "schemaUID():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsEAS(): boolean {
    let result = super.call("supportsEAS", "supportsEAS():(bool)", []);

    return result[0].toBoolean();
  }

  try_supportsEAS(): ethereum.CallResult<boolean> {
    let result = super.tryCall("supportsEAS", "supportsEAS():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get attester_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AttestCall extends ethereum.Call {
  get inputs(): AttestCall__Inputs {
    return new AttestCall__Inputs(this);
  }

  get outputs(): AttestCall__Outputs {
    return new AttestCall__Outputs(this);
  }
}

export class AttestCall__Inputs {
  _call: AttestCall;

  constructor(call: AttestCall) {
    this._call = call;
  }

  get schema(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get isMentor(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AttestCall__Outputs {
  _call: AttestCall;

  constructor(call: AttestCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RegisterMentorCall extends ethereum.Call {
  get inputs(): RegisterMentorCall__Inputs {
    return new RegisterMentorCall__Inputs(this);
  }

  get outputs(): RegisterMentorCall__Outputs {
    return new RegisterMentorCall__Outputs(this);
  }
}

export class RegisterMentorCall__Inputs {
  _call: RegisterMentorCall;

  constructor(call: RegisterMentorCall) {
    this._call = call;
  }

  get mentorName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterMentorCall__Outputs {
  _call: RegisterMentorCall;

  constructor(call: RegisterMentorCall) {
    this._call = call;
  }
}

export class RegisterVerificatorCall extends ethereum.Call {
  get inputs(): RegisterVerificatorCall__Inputs {
    return new RegisterVerificatorCall__Inputs(this);
  }

  get outputs(): RegisterVerificatorCall__Outputs {
    return new RegisterVerificatorCall__Outputs(this);
  }
}

export class RegisterVerificatorCall__Inputs {
  _call: RegisterVerificatorCall;

  constructor(call: RegisterVerificatorCall) {
    this._call = call;
  }

  get verificator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get type_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RegisterVerificatorCall__Outputs {
  _call: RegisterVerificatorCall;

  constructor(call: RegisterVerificatorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VerifyMentorCall extends ethereum.Call {
  get inputs(): VerifyMentorCall__Inputs {
    return new VerifyMentorCall__Inputs(this);
  }

  get outputs(): VerifyMentorCall__Outputs {
    return new VerifyMentorCall__Outputs(this);
  }
}

export class VerifyMentorCall__Inputs {
  _call: VerifyMentorCall;

  constructor(call: VerifyMentorCall) {
    this._call = call;
  }

  get mentor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class VerifyMentorCall__Outputs {
  _call: VerifyMentorCall;

  constructor(call: VerifyMentorCall) {
    this._call = call;
  }
}
